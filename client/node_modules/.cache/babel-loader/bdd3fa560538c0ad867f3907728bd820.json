{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { makeRequest } from \"../makeRequest\";\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const res = await makeRequest.get(url);\n        setData(res.data.data);\n      } catch (err) {\n        setError(true);\n      }\n\n      setLoading(false);\n    };\n\n    fetchData();\n  }, [url]);\n  return {\n    data,\n    loading\n  };\n};\n\n_s(useFetch, \"zRvvAK96aYqko2QYrTyuOCE8lvM=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/giorgiepitashvili/Documents/React/lamastore-React/client/src/hooks/useFetch.js"],"names":["useEffect","useState","makeRequest","useFetch","url","data","setData","loading","setLoading","fetchData","res","get","err","setError"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,gBAA5B;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMS,SAAS,GAAG,YAAY;AAC7B,UAAI;AACHD,QAAAA,UAAU,CAAC,IAAD,CAAV;AACA,cAAME,GAAG,GAAG,MAAMR,WAAW,CAACS,GAAZ,CAAgBP,GAAhB,CAAlB;AACAE,QAAAA,OAAO,CAACI,GAAG,CAACL,IAAJ,CAASA,IAAV,CAAP;AACA,OAJD,CAIE,OAAOO,GAAP,EAAY;AACbC,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACA;;AACDL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,KATD;;AAUAC,IAAAA,SAAS;AACT,GAZQ,EAYN,CAACL,GAAD,CAZM,CAAT;AAcA,SAAO;AAAEC,IAAAA,IAAF;AAAQE,IAAAA;AAAR,GAAP;AACA,CAnBD;;GAAMJ,Q;;AAqBN,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { makeRequest } from \"../makeRequest\";\n\nconst useFetch = (url) => {\n\tconst [data, setData] = useState(null);\n\tconst [loading, setLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\ttry {\n\t\t\t\tsetLoading(true);\n\t\t\t\tconst res = await makeRequest.get(url);\n\t\t\t\tsetData(res.data.data);\n\t\t\t} catch (err) {\n\t\t\t\tsetError(true);\n\t\t\t}\n\t\t\tsetLoading(false);\n\t\t};\n\t\tfetchData();\n\t}, [url]);\n\n\treturn { data, loading };\n};\n\nexport default useFetch;\n"]},"metadata":{},"sourceType":"module"}